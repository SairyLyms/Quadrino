// ================================================================
// ===              	Course Data Def.			            ===
// ================================================================
int16_t CourseData[][3]    = {{0  , 0, 0         },  //初期位置(0,0,0)
{10821,1060,30758},
{10417,785,-20800},
{10120,404,-24131},
{9281,0,31379},
{8432,299,28336},
{7524,335,-27013},
{7324,255,-30142},
{6993,408,23217},
{6655,845,22221},
{6302,1210,20961},
{6129,1472,24856},
{5336,1636,28052},
{4996,2219,21469},
{3713,3216,24429},
{3002,4006,22997},
{2473,4619,21950},
{2291,5258,14556},
{2692,6953,15617},
{2626,8351,17090},
{2370,9136,19484},
{1483,11044,20672},
{960,11585,26086},
{170,11974,26779},
{0,12327,13811},
{863,12813,4357},
{1932,13470,7204},
{3002,14375,7680},
{3677,15178,11053},
{3932,15852,13380},
{3999,16776,12928},
{4388,17250,13592},
{4315,17870,12026},
{5044,18472,7226},
{5458,18952,8193},
{6357,19845,8463},
{6734,20520,13687},
{6521,21462,19823},
{6297,21650,27878},
{5938,21681,27620},
{5476,21942,24767},
{5166,22380,16496},
{5366,22647,4205},
{6272,23249,7963},
{6430,23802,11873},
{6716,24240,7677},
{7524,24374,-4270},
{8491,23729,-7476},
{8739,23383,372},
{9129,23686,4501},
{10533,23802,-2526},
{11159,23669,1555},
{11536,24027,13577},
{11657,24762,9092},
{12685,25291,3120},
{14162,25559,3719},
{15359,26300,-638},
{15766,25966,-14121},
{15730,24805,-15788},
{16125,23346,-8269},
{17188,22599,-4387},
{18136,22319,-128},
{20106,22179,-2211},
{21212,21772,-5996},
{21838,21292,-5519},
{22969,20946,1459},
{23977,21517,6971},
{24816,22143,2125},
{25904,22325,3890},
{26433,22374,-7478},
{26342,21851,-24987},
{25260,21091,-29008},
{25025,20569,-7820},
{25587,20662,13091},
{25872,20966,6202},
{26638,21342,3399},
{27337,21507,1147},
{28218,22310,9622},
{28311,23121,13030},
{28718,23772,6036},
{30372,23444,-5574},
{30931,22927,-4334},
{31490,22714,-4300},
{32098,21815,-15408},
{31903,20459,-7171},
{32548,20143,-4628},
{32767,19475,-15168},
{32590,18854,-26497},
{31320,18843,-28680},
{30900,18149,-22392},
{30433,17049,-15707},
{30438,15870,-16608},
{30159,15409,-26794},
{29417,15141,-25246},
{28822,14545,-23072},
{28439,13883,-20043},
{28093,13372,-22710},
{27636,13062,-25535},
{27114,12740,-28835},
{25187,12236,-30708},
{24214,12722,-31272},
{23729,12521,-25255},
{23242,12011,-14816},
{24896,10856,-10010},
{25138,10029,-16368},
{24773,9482,-24651},
{22111,7847,-26003},
{15219,3556,-24945},
{13466,1456,-21815},
{12900,873,-19062},
{12714,332,-25258},
{12254,252,-31255},
{11967,177,-29309},
{11329,494,21944}
};
float courseScale = 0.1587760928;
// ================================================================
// ===              	Course Data Functions.			        ===
// ================================================================
void SetNextCourseData(int* NextCourseID,float* xNext,float* yNext,float *headNext);
void GetLenAndDirection(float x, float y, float head,float xNext,float yNext,float headNext,float* len,float* psi,float* phi1);
float Pi2pi(float angle);

void SetNextCourseData(int* NextCourseID,float* xNext,float* yNext,float *headNext)
{
    int numofID = sizeof(CourseData)/sizeof(CourseData[0]); //軌道の分割数
    *NextCourseID >= numofID-1 ? *NextCourseID = 1 : (*NextCourseID)++;
    *xNext = (float)CourseData[*NextCourseID][0] * courseScale;
    *yNext = (float)CourseData[*NextCourseID][1] * courseScale;
    *headNext =  (float)CourseData[*NextCourseID][2] * 0.0001;
}

int16_t GetCourseDataLen(void)
{
    return sizeof(CourseData)/sizeof(CourseData[0]);
}

void GetLenAndDirection(float x, float y, float head,float xNext,float yNext,float headNext,float* len,float* psi,float* phi1)
{
 *len = sqrtf(pow(xNext - x,2) + pow(yNext - y,2));
 *psi = Pi2pi(atan2f(yNext - y,xNext - x)-head);
 *phi1 = Pi2pi(headNext - head);
}

/************************************************************************
 * FUNCTION : 角度を-piからpiの範囲に納める
 * INPUT    : 
 * OUTPUT   : 
 ***********************************************************************/
float Pi2pi(float angle)
{
    while(angle >= M_PI) {angle -= M_PI * 2;}
    while(angle < -M_PI){angle += M_PI * 2;}
    return angle;
}